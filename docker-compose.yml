
services:

  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   container_name: kafka
  #   depends_on:
  #     - zookeeper
  #   networks:
  #     - broker-kafka
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #     KAFKA_LISTENERS: PLAINTEXT://:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
  #     KAFKA_LISTENER_INTERNAL_PORT: 9092
  #     KAFKA_LISTENER_EXTERNAL_PORT: 9092
  #     KAFKA_LISTENER_INTERNAL_HOSTNAME: kafka
  #     KAFKA_LISTENER_EXTERNAL_HOSTNAME: localhost
  #     KAFKA_LISTENER_NAME_INTERNAL: INSIDE
  #     KAFKA_LISTENER_NAME_EXTERNAL: OUTSIDE
  #   ports:
  #     - "9092:9092"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CREATE_TOPICS: "image_uploads"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1



  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - broker-kafka
    ports:
      - "2181:2181"

  redis:
    image: redis:latest
    networks:
      - broker-kafka
    ports:
      - "6379:6379"

  minio:
    image: quay.io/minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    networks:
      - broker-kafka
    environment:
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "minioadmin"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  kafka-consumer:
    build:
      context: ./kafka-consumer
      dockerfile: Dockerfile
    container_name: kafka-consumer
    networks:
      - broker-kafka
    depends_on:
      - kafka
      - minio
    restart: always
    environment:
      MINIO_URL: "http://minio:9000"
      MINIO_ACCESS_KEY: "minioadmin"
      MINIO_SECRET_KEY: "minioadmin"
      KAFKA_BROKER_URL: "kafka:29092"

volumes:
  minio-data:

networks:
  broker-kafka:
    driver: bridge